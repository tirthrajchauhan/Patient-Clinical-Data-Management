{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/components/addrecord/addrecord.component.css","webpack:///./src/app/components/addrecord/addrecord.component.html","webpack:///./src/app/components/addrecord/addrecord.component.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/editrecord/editrecord.component.css","webpack:///./src/app/components/editrecord/editrecord.component.html","webpack:///./src/app/components/editrecord/editrecord.component.ts","webpack:///./src/app/components/getrecord/getrecord.component.css","webpack:///./src/app/components/getrecord/getrecord.component.html","webpack:///./src/app/components/getrecord/getrecord.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/patient.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\n    color: #369;\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 250%;\\n  }\\n  #title{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    color: palevioletred;\\n    font-size: 150%;\\n  }\\n  .nav-link{\\n    color: white;\\n  }\\n  .footer {\\n    position: absolute;\\n   /* top: 60px;*/\\n    bottom: 0;\\n    width: 100%;\\n    height: 60px;\\n    line-height: 60px;\\n    background-color: #f5f5f5;\\n  }\\n  .log{\\n    color:white;\\n    align-self: flex-end;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osaURBQWlEO0lBQ2pELGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsaURBQWlEO0lBQ2pELHFCQUFxQjtJQUNyQixnQkFBZ0I7R0FDakI7RUFFRDtJQUNFLGFBQWE7R0FDZDtFQUVEO0lBQ0UsbUJBQW1CO0dBQ3BCLGVBQWU7SUFDZCxVQUFVO0lBQ1YsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsMEJBQTBCO0dBQzNCO0VBRUQ7SUFDRSxZQUFZO0lBQ1oscUJBQXFCO0dBQ3RCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XG4gICAgY29sb3I6ICMzNjk7XG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMjUwJTtcbiAgfVxuICAjdGl0bGV7XG4gICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiBwYWxldmlvbGV0cmVkO1xuICAgIGZvbnQtc2l6ZTogMTUwJTtcbiAgfVxuICBcbiAgLm5hdi1saW5re1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuXG4gIC5mb290ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgIC8qIHRvcDogNjBweDsqL1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgfVxuXG4gIC5sb2d7XG4gICAgY29sb3I6d2hpdGU7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gIH0iXX0= */\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\n<nav class=\\\"navbar navbar-expand-sm bg-dark\\\"  >\\n  <a class=\\\"navbar-brand\\\" id=\\\"title\\\">Health Care</a>\\n  <div class=\\\"container-fluid\\\">\\n    <ul class=\\\"navbar-nav\\\" >\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          Add Patient\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"index\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n          List Patients\\n        </a>\\n      </li> \\n      <li class=\\\"nav-item\\\">\\n        <a routerLink=\\\"login\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\n         Login\\n        </a>\\n      </li> \\n\\n      <li class=\\\"nav-item\\\">\\n          <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link log\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li> \\n        <!-- <li routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\"  >  <a routerLink=\\\"/login\\\">Login</a></li>\\n              <li routerLinkActive=\\\"active\\\"  class=\\\"nav-link\\\"  ><a routerLink=\\\"/dashboard\\\">Dashboard</a></li> -->\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    <span class=\\\"text-muted\\\">Copyright © 2018 Centennial College</span>\\n  </div>\\n</footer>\\n\\n\\n \\n <!-- <div class=\\\"container\\\"> -->\\n\\n    <!-- Static navbar -->\\n    <!-- <nav class=\\\"navbar navbar-inverse\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n          </div>\\n          <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n              <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/login\\\">Login</a></li>\\n              <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\n            </ul>\\n          </div><!-- /.nav-collapse -->\\n        <!-- </div><!-- /.container-fluid -->\\n      <!-- </nav>\\n  \\n  <router-outlet></router-outlet>\\n  </div> --> \"","import { Component } from '@angular/core';\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\nimport { NavigationCancel,\n  Event,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router } from '@angular/router';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\n    this._router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event);\n    });\n    \n  }\n  private navigationInterceptor(event: Event): void {\n    if (event instanceof NavigationStart) {\n      this._loadingBar.start();\n    }\n    if (event instanceof NavigationEnd) {\n      this._loadingBar.complete();\n    }\n    if (event instanceof NavigationCancel) {\n      this._loadingBar.stop();\n    }\n    if (event instanceof NavigationError) {\n      this._loadingBar.stop();\n    }\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { AddrecordComponent } from './components/addrecord/addrecord.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PatientService } from './patient.service';\n//import {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GetrecordComponent } from './components/getrecord/getrecord.component';\nimport { EditrecordComponent } from './components/editrecord/editrecord.component';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: 'create',\n    component: CreateComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'index',\n    component: IndexComponent,\n    canActivate: [AuthGuard]\n  },\n  { \n    path: 'login', component: LoginComponent },\n\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n\n  {\n    path: 'addrecord',\n    component: AddrecordComponent\n  },\n  {\n    path: 'getrecord',\n    component: GetrecordComponent\n  },\n  {\n    path: 'editrecord',\n    component: EditrecordComponent\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateComponent,\n    IndexComponent,\n    EditComponent,\n    LoginComponent,\n    DashboardComponent,\n    AddrecordComponent,\n    GetrecordComponent,\n    EditrecordComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    SlimLoadingBarModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [PatientService,AuthGuard],\n\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n\nconstructor(private route : Router){}\n\ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;  \n    return this.verifyLogin(url);\n}\n\nverifyLogin(url) : boolean{\n    if(!this.isLoggedIn()){\n        this.route.navigate(['/login']);\n        return false;\n    }\n    else if(this.isLoggedIn()){\n        return true;\n    }\n}\npublic isLoggedIn(): boolean{\n    let status = false;\n    if( localStorage.getItem('isLoggedIn') == \"true\"){\n      status = true;\n    }\n    else{\n      status = false;\n    }\n    return status;\n}\n}","import { Injectable } from '@angular/core';\nimport { ILogin } from './login';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  logout(): void {\n    localStorage.setItem('isLoggedIn', \"false\");\n    localStorage.removeItem('token');\n  } \n\n}","module.exports = \"p{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hZGRyZWNvcmQvYWRkcmVjb3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpREFBaUQ7SUFDakQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixvQkFBb0I7SUFDcEIscUJBQXFCO0NBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9hZGRyZWNvcmQvYWRkcmVjb3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwe1xuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn0iXX0= */\"","module.exports = \"<p>\\n  Add Record!\\n</p>\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"angForm\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Blood Pressure</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"blood_pressure\\\" formControlName=\\\"blood_pressure\\\" #first_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['blood_pressure'].invalid && (angForm.controls['blood_pressure'].dirty || angForm.controls['blood_pressure'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['blood_pressure'].errors.required\\\">\\n          Please insert blood pressure.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Respiratory Rate</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"respi_rate\\\" formControlName=\\\"respi_rate\\\" #last_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['respi_rate'].invalid && (angForm.controls['respi_rate'].dirty || angForm.controls['respi_rate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['respi_rate'].errors.required\\\">\\n          Please insert respiratory rate.\\n          </div>\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Blood Oxygen Level</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bo_level\\\" formControlName=\\\"bo_level\\\" #dob/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['bo_level'].invalid && (angForm.controls['bo_level'].dirty || angForm.controls['bo_level'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['bo_level'].errors.required\\\">\\n            Please insert blood oxygen level.\\n          </div>\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Heart-Beat Rate</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"hb_rate\\\" formControlName=\\\"hb_rate\\\" #address/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['hb_rate'].invalid && (angForm.controls['hb_rate'].dirty || angForm.controls['hb_rate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['hb_rate'].errors.required\\\">\\n            Please insert heart-beat rate.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add Patient</button>\\n          </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addrecord',\n  templateUrl: './addrecord.component.html',\n  styleUrls: ['./addrecord.component.css']\n})\nexport class AddrecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"p{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpREFBaUQ7SUFDakQsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixvQkFBb0I7SUFDcEIscUJBQXFCO0NBQ3hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwe1xuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn0iXX0= */\"","module.exports = \"<p>\\n  Add New Patient!\\n</p>\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n      \\n      <form [formGroup]=\\\"angForm\\\" novalidate>\\n          <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"first_name\\\" formControlName=\\\"first_name\\\" #first_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\n          First name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"last_name\\\" formControlName=\\\"last_name\\\" #last_name/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\n          Last name is required.\\n          </div>\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Date Of Birth</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dob\\\" formControlName=\\\"dob\\\" #dob/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['dob'].errors.required\\\">\\n            Date of birth is required.\\n          </div>\\n        </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Address</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" formControlName=\\\"address\\\" #address/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['address'].invalid && (angForm.controls['address'].dirty || angForm.controls['address'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['address'].errors.required\\\">\\n            Address is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button (click)=\\\"addPatient(first_name.value, last_name.value,dob.value,address.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add Patient</button>\\n          </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { PatientService } from '../../patient.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  angForm: FormGroup;\n\n  constructor(private patientService: PatientService, private fb: FormBuilder, private router: Router) { \n    this.createForm();\n    \n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ],\n      dob: ['', Validators.required ],\n      address: ['', Validators.required ]\n   });\n  }\n\n  addPatient(first_name, last_name,dob,address) {\n    this.patientService.addPatient(first_name, last_name,dob,address);\n    this.router.navigate(['/index']);\n    window.location.reload();\n  \n}\n  ngOnInit() {\n  }\n\n  \n}\n","module.exports = \"p{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlEQUFpRDtJQUNqRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICAgIGZvbnQtc3R5bGU6IG9ibGlxdWU7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59Il19 */\"","module.exports = \"<p>\\n  Update Patient Details!\\n</p>\\n<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"angForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">First Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"first_name\\\" formControlName=\\\"first_name\\\" #first_name [(ngModel)] = \\\"patient.first_name\\\" />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\n            first_name is required.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Last Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"last_name\\\" formControlName=\\\"last_name\\\" #last_name [(ngModel)] = \\\"patient.last_name\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\n                last_name is required.\\n            </div>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Date Of Birth</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dob\\\" formControlName=\\\"dob\\\" #dob [(ngModel)] = \\\"patient.dob\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['dob'].invalid && (angForm.controls['dob'].dirty || angForm.controls['dob'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['dob'].errors.required\\\">\\n                dob is required.\\n            </div>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Address</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" formControlName=\\\"address\\\" #address [(ngModel)] = \\\"patient.address\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['address'].invalid && (angForm.controls['address'].dirty || angForm.controls['address'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['address'].errors.required\\\">\\n                address is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <button (click)=\\\"updatePatient(first_name.value, last_name.value,dob.value,address.value)\\\" [disabled]=\\\"angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update Patient</button>\\n            </div>\\n\\n      </form>\\n    </div>\\n  </div>\"","\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Patient } from '../index/Patient';\nimport { PatientService } from '../../patient.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  patient: any = {};\n  angForm: FormGroup;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private patientService: PatientService,\n    private fb: FormBuilder) {\n      this.createForm();\n    }\n    createForm() {\n      this.angForm = this.fb.group({\n        first_name: ['', Validators.required ],\n        last_name: ['', Validators.required ],\n        dob: ['', Validators.required ],\n        address: ['', Validators.required ]\n         });\n      }\n\n\nupdatePatient(first_name, last_name,dob,address) {\n  this.route.params.subscribe(params => {\n     this.patientService.updatePatient(first_name, last_name,dob,address, params['id']);\n     this.router.navigate(['index']);\n     \n  });\n  window.location.reload();\n}\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.patientService.editPatient(params['id']).subscribe(res => {\n          this.patient = res;\n      });\n    });\n  }\n}","module.exports = \"p{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0cmVjb3JkL2VkaXRyZWNvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlEQUFpRDtJQUNqRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2VkaXRyZWNvcmQvZWRpdHJlY29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICAgIGZvbnQtc3R5bGU6IG9ibGlxdWU7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59Il19 */\"","module.exports = \"<p>\\n  Update Patient Record!\\n</p>\\n<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"angForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Blood Pressure</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"blood_pressure\\\" formControlName=\\\"blood_pressure\\\" #first_name [(ngModel)] = \\\"patient.blood_pressure\\\" />\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['blood_pressure'].invalid && (angForm.controls['blood_pressure'].dirty || angForm.controls['blood_pressure'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['blood_pressure'].errors.required\\\">\\n          Please insert blood pressure!\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Respiratory Rate</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"respi_rate\\\" formControlName=\\\"respi_rate\\\" #last_name [(ngModel)] = \\\"patient.respi_rate\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['respi_rate'].invalid && (angForm.controls['respi_rate'].dirty || angForm.controls['respi_rate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['respi_rate'].errors.required\\\">\\n              Please insert respiratory rate!\\n            </div>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Blood Oxygen Level</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bo_level\\\" formControlName=\\\"bo_level\\\" #bo_level [(ngModel)] = \\\"patient.bo_level\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['bo_level'].invalid && (angForm.controls['bo_level'].dirty || angForm.controls['bo_level'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['bo_level'].errors.required\\\">\\n               Please insert blood oxygen level!\\n            </div>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Heart-Beat Rate</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"hb_rate\\\" formControlName=\\\"hb_rate\\\" #address [(ngModel)] = \\\"patient.hb_rate\\\"/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['hb_rate'].invalid && (angForm.controls['hb_rate'].dirty || angForm.controls['hb_rate'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"angForm.controls['hb_rate'].errors.required\\\">\\n                address is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <button [disabled]=\\\"angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update Record</button>\\n            </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editrecord',\n  templateUrl: './editrecord.component.html',\n  styleUrls: ['./editrecord.component.css']\n})\nexport class EditrecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".buttons{ \\n    text-align: center;\\n}\\np{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9nZXRyZWNvcmQvZ2V0cmVjb3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7Q0FDdEI7QUFDRDtJQUNJLGlEQUFpRDtJQUNqRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2dldHJlY29yZC9nZXRyZWNvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b25zeyBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5we1xuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn0iXX0= */\"","module.exports = \"<p>\\n  Patient Record\\n</p>\\n\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Blood Pressure</td>\\n      <td>Respiratory Rate</td>\\n      <td>Blood Oxygen Level</td>\\n      <td>Heart Beat Rate</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody id=\\\"body_color\\\">\\n      <tr>\\n          <td>Demo</td>\\n          <td>Demo</td>\\n          <td>Demo</td>\\n          <td>Demo</td>\\n      </tr>\\n  </tbody>\\n</table>\\n\\n<table class=\\\"table table-hover\\\">\\n<tr class=\\\"buttons\\\">\\n    <td><a [routerLink]=\\\"['/editrecord']\\\" class=\\\"btn btn-primary\\\" id=\\\"buttons\\\">Edit</a></td>\\n    <td><button class=\\\"btn btn-danger\\\" id=\\\"buttons\\\">Delete</button></td>\\n    </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-getrecord',\n  templateUrl: './getrecord.component.html',\n  styleUrls: ['./getrecord.component.css']\n})\nexport class GetrecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".nav-link{\\n    color: black;\\n  }\\n\\n.buttons{ \\n    display: flex;\\n    justify-content: last baseline;\\n}\\n\\np, .loginBox{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n\\n.CellWithComment{\\n    position:relative;\\n  }\\n\\n.CellComment{\\n    display:none;\\n    position:absolute; \\n    z-index:100;\\n    border:1px;\\n    background-color:white;\\n   /* border-style:solid;\\n    border-width:1px;\\n    border-color: blue;*/\\n    padding:3px;\\n    color: blue; \\n    top:40px; \\n    left:120px;\\n  }\\n\\n.CellWithComment:hover span.CellComment{\\n    display:block;\\n  }\\n\\n@media only screen and (max-width: 600px) {\\n    .hide {\\n       display: none;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbmRleC9pbmRleC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtHQUNkOztBQUVIO0lBQ0ksY0FBYztJQUNkLCtCQUErQjtDQUNsQzs7QUFDRDtJQUNJLGlEQUFpRDtJQUNqRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixxQkFBcUI7Q0FDeEI7O0FBRUQ7SUFDSSxrQkFBa0I7R0FDbkI7O0FBRUg7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixXQUFXO0lBQ1gsdUJBQXVCO0dBQ3hCOzt5QkFFc0I7SUFDckIsWUFBWTtJQUNaLFlBQVk7SUFDWixTQUFTO0lBQ1QsV0FBVztHQUNaOztBQUVEO0lBQ0UsY0FBYztHQUNmOztBQUVIO0lBQ0k7T0FDRyxjQUFjO0tBQ2hCO0NBQ0oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2LWxpbmt7XG4gICAgY29sb3I6IGJsYWNrO1xuICB9XG5cbi5idXR0b25zeyBcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogbGFzdCBiYXNlbGluZTtcbn1cbnAsIC5sb2dpbkJveHtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICAgIGZvbnQtc3R5bGU6IG9ibGlxdWU7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59XG5cbi5DZWxsV2l0aENvbW1lbnR7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gIH1cbiAgXG4uQ2VsbENvbW1lbnR7XG4gICAgZGlzcGxheTpub25lO1xuICAgIHBvc2l0aW9uOmFic29sdXRlOyBcbiAgICB6LWluZGV4OjEwMDtcbiAgICBib3JkZXI6MXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7XG4gICAvKiBib3JkZXItc3R5bGU6c29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOjFweDtcbiAgICBib3JkZXItY29sb3I6IGJsdWU7Ki9cbiAgICBwYWRkaW5nOjNweDtcbiAgICBjb2xvcjogYmx1ZTsgXG4gICAgdG9wOjQwcHg7IFxuICAgIGxlZnQ6MTIwcHg7XG4gIH1cbiAgXG4gIC5DZWxsV2l0aENvbW1lbnQ6aG92ZXIgc3Bhbi5DZWxsQ29tbWVudHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgICAuaGlkZSB7XG4gICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59Il19 */\"","module.exports = \"<div class=\\\"loginBox\\\">\\n        Welcome,  {{id}}\\n        <a href=\\\"javascript:void(0);\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </div>\\n<p>\\n    Patient Details\\n</p>\\n<div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"addPatient\\\" novalidate>\\n                <table class=\\\"table table-hover\\\">\\n                            <thead>\\n                                    <tr>\\n                                        <td>First Name</td>\\n                                        <td class=\\\"hide\\\">Last Name</td>\\n                                        <td class=\\\"hide\\\">DOB</td>\\n                                        <td class=\\\"hide\\\">Address</td>\\n                                        <td colspan=\\\"2\\\">Actions</td>\\n                                    </tr>\\n                            </thead>\\n                            <tbody id=\\\"body_color\\\">\\n                                    <tr *ngFor=\\\"let patient of patients\\\">\\n                                        <td class=\\\"CellWithComment\\\"><a [routerLink]=\\\"['/getrecord']\\\" class=\\\"nav-link\\\">{{ patient.first_name }}<span class=\\\"CellComment\\\">Click to fetch records!</span></a>\\n                                        </td>\\n                                        <td class=\\\"hide\\\">{{ patient.last_name }}</td>\\n                                        <td class=\\\"hide\\\">{{ patient.dob }}</td>\\n                                        <td class=\\\"hide\\\">{{ patient.address }}</td>\\n                                        <td class=\\\"buttons\\\"><a [routerLink]=\\\"['/edit', patient._id]\\\" class=\\\"btn btn-primary\\\">Edit</a>\\n                                        <button (click)=\\\"deletePatient(patient._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n                                    </tr>\\n                            </tbody>\\n                </table> \\n          </form>\\n        </div>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Patient } from './Patient';\nimport { PatientService } from '../../patient.service';\nimport { AuthService } from '../../auth.service';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormBuilder } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  patients: Patient[];\n  id: string;\n  addPatient:FormGroup; \n  constructor(private patientService: PatientService, private router: Router,public authService: AuthService,    private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.addPatient = this.fb.group({\n      first_name: [''],\n      last_name: [''],\n      DOB: [''],\n      address: [''],\n    });\n\n\n\n    this.patientService\n      .getPatients()\n      .subscribe((data: Patient[]) => {\n      this.patients = data;\n      \n    });\n\n    this.id = localStorage.getItem('token');\n  }\n\n  \n  logout(): void {\n    console.log(\"Logout\");\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n  \ndeletePatient(id) {\n  this.patientService.deletePatient(id).subscribe(res => {\n    console.log('Deleted');\n  });\n  window.location.reload();\n}\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"col-md-6 col-md-offset-3 loginBox\\\">\\n        Welcome,  {{id}}\\n        <a href=\\\"javascript:void(0);\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  id: string;\n  constructor(private router: Router,public authService: AuthService) { }\n\n  ngOnInit() {\n    this.id = localStorage.getItem('token');\n  }\n\n  logout(): void {\n    console.log(\"Logout\");\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}","module.exports = \"p{\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\n    font-size: 18px;\\n    padding-top: 40px;\\n    font-style: oblique;\\n    padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlEQUFpRDtJQUNqRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtJQUNwQixxQkFBcUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicHtcbiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgR2VuZXZhLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICAgIGZvbnQtc3R5bGU6IG9ibGlxdWU7XG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XG59Il19 */\"","module.exports = \"<p>\\n        Login\\n</p>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n                <div class=\\\"loginBox\\\">\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': submitted && f.userid.errors }\\\">\\n                    <label class=\\\"col-md-4\\\">Username</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"userid\\\" />\\n                 </div>\\n                 <div *ngIf=\\\"submitted && f.userid.errors\\\" class=\\\"help-block\\\">\\n                        <div *ngIf=\\\"f.userid.errors.required\\\">Userid is required</div>\\n                  </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': submitted && f.password.errors }\\\">\\n              <label class=\\\"col-md-4\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"/>\\n            </div>\\n            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"help-block\\\">\\n                    <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n            </div>\\n            \\n              <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Login</button>\\n                </div>\\n          </form>\\n          </div>\\n        </div>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ILogin } from '../login';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: ILogin = { userid: \"admin\", password: \"admin123\" };\n  loginForm: FormGroup;\n  message: string;\n  returnUrl: string;\n\n  constructor(private formBuilder: FormBuilder,private router: Router, public authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userid: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.returnUrl = '/index';\n    this.authService.logout();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n\n  login() {\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n    else{\n      if(this.f.userid.value == this.model.userid && this.f.password.value == this.model.password){\n        console.log(\"Login successful\");\n        //this.authService.authLogin(this.model);\n        localStorage.setItem('isLoggedIn', \"true\");\n        localStorage.setItem('token', this.f.userid.value);\n        this.router.navigate([this.returnUrl]);\n      }\n      else{\n        this.message = \"Please check your userid and password\";\n      }\n    }    \n}\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Patient } from './components/index/Patient';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  uri = 'http://localhost:4000/patient';\n\n \n  constructor(private http: HttpClient) { }\n\n  addPatient(first_name, last_name,dob,address) {\n    const obj = {\n      first_name : first_name,\n      last_name: last_name,\n      dob:dob,\n      address:address\n\n    };\n    this.http.post(`${this.uri}/add`, obj)\n    .subscribe(res => console.log('Done'));\n}\n  getPatients() {\n    return this\n           .http\n           .get(`${this.uri}`);\n           \n    }\n\n\n\n\n\n    editPatient(id) {\n  return this\n            .http\n            .get(`${this.uri}/edit/${id}`);\n  }\n\n\nupdatePatient(first_name, last_name,dob,address,id) {\n\n  const obj = {\n    first_name : first_name,\n    last_name: last_name,\n    dob:dob,\n    address:address\n  };\n  this\n    .http\n    .post(`${this.uri}/update/${id}`, obj)\n    .subscribe(res => console.log('Done'));\n}\n\n\ndeletePatient(id) {\n  return this\n            .http\n            .get(`${this.uri}/delete/${id}`);\n}\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}